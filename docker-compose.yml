version: '3.4'
services:

  # This is a simple Loginbuddy configuration.
  #
  # TIP: Before getting frustrated by having to configure all of the below, try the samples project first; it is ready to go:
  #
  # - https://github.com/SaschaZeGerman/loginbuddy-samples
  #
  # Otherwise ... do the following:
  #
  # - run 'sh initialize-dev-environment.sh' // this will create a .env file with default values including a ssl key pair and a secret to obfuscate token
  #
  # Configure Loginbuddy:
  #
  # - ./net.loginbuddy.service/src/main/resources/config.json // add any client and provider configuration to your needs
  # - ./net.loginbuddy.service/src/main/resources/permissions.policy // add any domain that Loginbuddy should connect to (e.g.: domains OPs are using for OpenID Connect flows)
  # - ./net.loginbuddy.service/src/main/resources/discovery.json // replace {your-domain} with the content of HOSTNAME_LOGINBUDDY in .env (i.e.: local.loginbuddy.net)
  #
  # Build Loginbuddy:
  #
  # - run 'make build_all'
  #
  # If you do not want to build Loginbuddy, mount those files as volumes instead by adding these lines:
  #
  #     volumes:
  #      - ./net.loginbuddy.service/src/main/resources/config.json:/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/config.json
  #      - ./net.loginbuddy.service/src/main/resources/permissions.policy:/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/permissions.policy
  #      - ./net.loginbuddy.service/src/main/resources/discovery.json:/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/discovery.json
  #
  loginbuddy:
    image: saschazegerman/loginbuddy:latest
    container_name: loginbuddy
    hostname: local.loginbuddy.net
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./dev/loginbuddy.p12:/usr/local/tomcat/ssl/loginbuddy.p12
    environment:
      - "HOSTNAME_LOGINBUDDY=${HOSTNAME_LOGINBUDDY}"
      - "SSL_PWD=${SSL_PWD}"
      - "SECRET_OBFUSCATION=${SECRET_OBFUSCATION}"