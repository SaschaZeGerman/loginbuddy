<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="c43585a4-7207-4144-a409-d686ce46e01f" activeEnvironment="Default" name="Loginbuddy-Flows" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description>These tests verify different flows with public and configdential clients. Always against the test server (FAKE)</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Print Report Statistics" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/Applications/SoapUI-5.4.0.app/Contents/Resources/app/bin"/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Limit" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:testSuite id="cec7d4f7-7b18-484b-a4f8-3ac3deeeab0a" name="CompleteFlow-Public-Client"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5bae8ed6-1bec-43ec-bb8a-956af32919c0" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Success" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="httprequest" name="client-loginbuddy-requestProviderList" id="f4974ee8-3892-4999-8e69-ce290e9dda11"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="client-loginbuddy-requestProviderList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client
  calls lbginbuddy to retrieve list of providers. This checks for the existence of the 'fake'
  provider for testing purposes.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b8a7410e-0f24-46b2-813c-29db38945720" name="contains=&lt;html>"><con:configuration><token>&lt;html></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid email profile</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="loginbuddy-getDetails" id="bff928aa-c0cd-4340-bd41-0be7ce7fe042"><con:description>Extract the 'state' parameter and get the 'action' which is the next location</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>form_action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/@action</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>loginbuddy-nextLocation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>session</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>loginbuddy-selectFakeProvider</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="loginbuddy-nextLocation" id="8861a199-87de-400d-86d7-0e98ef4fffc9"><con:description>Setting a variable to be used later as URL path</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>action</con:name><con:value>initialize</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-selectFakeProvider" id="3328560a-a037-4cbc-88ec-e641c525fb82"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7a95031b-819e-4780-9c96-2bcc99423138" name="loginbuddy-selectFakeProvider" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Choosing
  the provider. Expects a
  redirect to the login page of the selected
  provider. Checks for required
  parameters</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}/${#action}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3fd40551-e7ad-47cb-bb2d-f52c37bf1dc5" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8de45dc6-e7be-41d5-9d28-9ad09f0509cb" name="find 'Location' header and required parameters"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("client_id"));
    assert(location.contains("response_type=code"));
    assert(location.contains("scope=openid%20profile%20email"));
    assert(location.contains("nonce"));
    assert(location.contains("redirect_uri"));
    assert(location.contains("code_challenge"));
    assert(location.contains("code_challenge_method=S256"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>provider</con:name><con:value>${#Project#provider_test}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>4e016d9a-f438-43b5-b0f2-2e615013f4fa</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-setProviderEndpoint" id="b6c27510-5df7-4306-b6ee-7628e00947cc"><con:description>Set the endpoint for the next test step</con:description><con:settings/><con:config><script>//Find the 'Location' header of the response
  def location =
  testRunner.testCase.testSteps["loginbuddy-selectFakeProvider"].testRequest.response.responseHeaders["Location"][0]

  // Write the 'location' into the 'endpoint' of the testStep 'callProvider'
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-provider-callFakeProvider",
  "Endpoint", location.toString())</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-provider-callFakeProvider" id="1d024f7f-31e1-4fdc-b395-0fef3025e9b6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="be121e2d-1636-4a5d-ba1b-44ef31a40190" name="loginbuddy-provider-callFakeProvider" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Calls the providers authorization endpoint and receives a login page</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint><![CDATA[https://demoserver.loginbuddy.net/authorize?client_id=loginbuddy_demoId&response_type=code&scope=openid%20profile%20email&nonce=a83eb3aa-980e-4f67-a1cb-21dabef004de&redirect_uri=https%3A%2F%2Flocal.loginbuddy.net%2Fcallback&code_challenge=qgraSfkMaye4ONBZ2pNaP8qrKvskRaC6LnYvEjpZqVU&code_challenge_method=S256&response_mode=query&state=4e016d9a-f438-43b5-b0f2-2e615013f4fa]]></con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1ad74da4-00c8-49ad-a962-6cbbdae08127" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="27d5881d-f6b6-4fd2-b89b-9898cde2c318" name="check for 'x-frame-options'"><con:configuration><scriptText>assert messageExchange.responseHeaders["X-Frame-Options"] != null</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Username" id="b8a6018a-63e1-4e5e-9b92-d6db15eec2cb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-provideEmailAddress" id="e8bad344-d7a4-4a5a-b433-8c36f8fb01e7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="71049774-abb4-455a-a78a-93f8b9736e24" name="provider-provideEmailAddress" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users email address to be send to the login-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#host_fake_server}/login</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae795b15-6bbb-4dfb-ad1e-af6d33edfdd0" name="statue=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>email</con:name><con:value>${#Project#email}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>1ca857e7-fad9-4257-996b-7918c5dbf765</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>login</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Password" id="3cb51161-ff9b-484a-a2b1-18956cd1ec71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-providePassword" id="2ac1be17-87ac-4fec-ad95-f46ebf3db658"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="e05f9780-7ac5-41be-a84b-fb2425d8b4cd" name="provider-providePassword" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users password to be send to the authenticate-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/authenticate</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="26cf303b-1eb4-484c-a132-9ef38be17d3e" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#Project#password}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>1ca857e7-fad9-4257-996b-7918c5dbf765</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>authenticate</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Grant" id="b04ffe2f-52a2-4744-9de6-4f2bb1f93634"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-providePassword</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-grantAccess</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-grantAccess" id="efe7a649-a74e-448b-b961-bcf4a214a2cf"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="1c1997d7-7a13-416c-a6cd-fdc2b294865c" name="provider-grantAccess" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Providing
  the users grant to be send to the consent-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/consent</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="5ab02bdb-ebc1-40a6-a242-e361e7a4e0f5" name="status=200"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>action</con:name><con:value>grant</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>1ca857e7-fad9-4257-996b-7918c5dbf765</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-extractLocation" id="0c18fe1b-ac77-4231-85ca-06f182ceb90a"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
  def location =
  testRunner.testCase.testSteps["provider-grantAccess"].testRequest.response.responseHeaders["Location"][0]
  def code = location =~ /code=([^&amp;]+)/;
  if (!code) {
  throw new RuntimeException("No code returned!");
  }
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-exchangeCodeForToken", "Endpoint", location)</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-exchangeCodeForToken" id="2396ab80-8116-48d3-bbfe-27396ca61588"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="loginbuddy-exchangeCodeForToken" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Forward the 'state' and 'code' to loginbuddy. Loginbuddy then calls the providers token-endpoint. It then issues its own 'code'</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/callback?state=4e016d9a-f438-43b5-b0f2-2e615013f4fa&amp;code=261a6c8d-5188-4cd4-90e1-659a323a2187</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ccd972c0-afaf-4ae9-bd0d-69669a6fdf10" name="find: code and state"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("code"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="soapui-extractLocation" id="32e9b2a1-fb7e-4cba-8b2e-a6458fba7275"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
def location = testRunner.testCase.testSteps["loginbuddy-exchangeCodeForToken"].testRequest.response.responseHeaders["Location"][0]
def code = location =~ /code=([^&amp;]+)/;
if (!code) {
  throw new RuntimeException("No code returned!");
}
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("soapui-exchangeCodeForUserDetails", "code", code.group(1))</script></con:config></con:testStep><con:testStep type="httprequest" name="soapui-exchangeCodeForUserDetails" id="eb334346-85da-4773-976f-35b4c5a66515"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-exchangeCodeForUserDetails" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>The client uses its 'code' to retrieve the user details</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1f9d9b0a-8d68-44d5-a9a3-45cf0e2686ca" name="sub in id_token == email"><con:configuration><path>$.details_provider.id_token_payload.sub</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cf484791-1674-4252-90bc-0e9918dc57ce" name="sub in userinfo == email"><con:configuration><path>$.details_provider.userinfo.sub</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bc24874a-9d0e-4fea-87fc-6755b7bdc8a2" name="sub in normalized == email"><con:configuration><path>$.details_normalized.sub</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1f9d9b0a-8d68-44d5-a9a3-45cf0e2686ca" name="on_behalf_of.iss == loginbuddy demoserver"><con:configuration><path>$.details_provider.id_token_payload.on_behalf_of.iss</path><content>${#Project#host_fake_Server}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>fca72c6d-91ca-4dab-854a-ecb963337da3</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="soapui-codeNotTwice" id="331df15d-d684-4b84-a7a1-3e67b2195a19"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-codeNotTwice" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Verify that the 'code' can only be used once (here: success case)</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="77a924a6-237e-491a-810e-09d8f0b6e7f6" name="contains: expired"><con:configuration><token>expired</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>0dd0b004-fbb6-4587-857e-822b3255b78a</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="discovery" id="043545cb-34c2-474d-876c-7f6df4aa71b4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="discovery" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Get the openid configuration, extract userinfo and jwks</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_discovery}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="OpenIDConfig Details" id="99d32a11-c0ec-43ac-a09b-4c2eeb73c8cf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userinfo</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>discovery</con:sourceStep><con:sourcePath>userinfo_endpoint</con:sourcePath><con:targetType>Endpoint</con:targetType><con:targetStep>userinfo via loginbuddy</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>soapui-exchangeCodeForUserDetails</con:sourceStep><con:sourcePath>access_token</con:sourcePath><con:targetType>accessToken</con:targetType><con:targetStep>TokenResponseDetails</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>userinfo2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>discovery</con:sourceStep><con:sourcePath>userinfo_endpoint</con:sourcePath><con:targetType>Endpoint</con:targetType><con:targetStep>userinfo via loginbuddy (AuthHeader)</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TokenResponseDetails" id="cfd2fba2-815e-4106-b8e2-8a91a6452d97"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>accessToken</con:name><con:value>FAKE_f8237b46-6aff-44c2-b198-1253d06adb56</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="userinfo via loginbuddy" id="2eaf7235-6321-46be-ba28-bbf5caa39e1b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="userinfo via loginbuddy" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Verify that the 'code' can only be used once (here: success case)</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="header1" value="value01"/>
  &lt;con:entry key="header1" value="value02"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/userinfo</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1213f14f-6ecd-4d18-acec-88e9b87fc9e3" name="contain: email"><con:configuration><path>email</path><content>fake@emailaddress.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="bf233b99-184e-430a-99e4-ab6b3de67172" name="check: no x-frame-options header"><con:configuration><scriptText>assert messageExchange.responseHeaders["X-Frame-Options"] == null</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>access_token</con:name><con:value>${#accessToken}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="userinfo via loginbuddy (AuthHeader)" id="5cc9d0b1-a39a-45fc-a4a0-837db58c56c5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="userinfo via loginbuddy (AuthHeader)" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Verify that the 'code' can only be used once (here: success case)</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer ${#accessToken}"/>
  &lt;con:entry key="header1" value="value01"/>
  &lt;con:entry key="header1" value="value02"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/userinfo</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1213f14f-6ecd-4d18-acec-88e9b87fc9e3" name="contain: email"><con:configuration><path>email</path><content>fake@emailaddress.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="bf233b99-184e-430a-99e4-ab6b3de67172" name="check: no x-frame-options header"><con:configuration><scriptText>assert messageExchange.responseHeaders["X-Frame-Options"] == null</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="0f52980f-b992-432c-9cc1-189aeb20503b" name="CompleteFlow-Public-Client-Jwt-Response"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0d7c5e96-05a1-439c-919b-a3c425c8411a" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Success" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="httprequest" name="client-loginbuddy-requestProviderList" id="b821c6e0-bd5c-4f53-97f9-27c4cf062db8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="client-loginbuddy-requestProviderList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client
  calls lbginbuddy to retrieve list of providers. This checks for the existence of the 'fake'
  provider for testing purposes.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b8a7410e-0f24-46b2-813c-29db38945720" name="contains=&lt;html>"><con:configuration><token>&lt;html></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id_jwt}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid email profile</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="loginbuddy-getDetails" id="70c90ecd-f8c2-4002-8c8b-11184c01d01e"><con:description>Extract the 'state' parameter and get the 'action' which is the next location</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>form_action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/@action</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>loginbuddy-nextLocation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>session</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>loginbuddy-selectFakeProvider</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="loginbuddy-nextLocation" id="825013fd-801b-4876-82d6-807b284cc6eb"><con:description>Setting a variable to be used later as URL path</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>action</con:name><con:value>initialize</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-selectFakeProvider" id="c28fa71c-2564-4454-8857-6b8f2baea274"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7a95031b-819e-4780-9c96-2bcc99423138" name="loginbuddy-selectFakeProvider" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Choosing
  the provider. Expects a
  redirect to the login page of the selected
  provider. Checks for required
  parameters</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}/${#action}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3fd40551-e7ad-47cb-bb2d-f52c37bf1dc5" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8de45dc6-e7be-41d5-9d28-9ad09f0509cb" name="find 'Location' header and required parameters"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("client_id"));
    assert(location.contains("response_type=code"));
    assert(location.contains("scope=openid%20profile%20email"));
    assert(location.contains("nonce"));
    assert(location.contains("redirect_uri"));
    assert(location.contains("code_challenge"));
    assert(location.contains("code_challenge_method=S256"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>provider</con:name><con:value>${#Project#provider_test}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>556fcefb-2a0c-46d7-a50f-ccb1b6e84bac</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-setProviderEndpoint" id="ff75b81f-6345-4172-84a1-98d31fbc20bf"><con:description>Set the endpoint for the next test step</con:description><con:settings/><con:config><script>//Find the 'Location' header of the response
  def location =
  testRunner.testCase.testSteps["loginbuddy-selectFakeProvider"].testRequest.response.responseHeaders["Location"][0]

  // Write the 'location' into the 'endpoint' of the testStep 'callProvider'
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-provider-callFakeProvider",
  "Endpoint", location.toString())</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-provider-callFakeProvider" id="e840e985-9804-4187-84ae-dd122d2935bb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="be121e2d-1636-4a5d-ba1b-44ef31a40190" name="loginbuddy-provider-callFakeProvider" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Calls the providers authorization endpoint and receives a login page</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint><![CDATA[https://demoserver.loginbuddy.net/authorize?client_id=loginbuddy_demoId&response_type=code&scope=openid%20profile%20email&nonce=ace96b5d-d950-4135-b5b4-1912269b90a2&redirect_uri=https%3A%2F%2Flocal.loginbuddy.net%2Fcallback&code_challenge=Rsl2LedGW81Ur9mr5yHwN-P9e6miPL1o6DBDYaQQjZs&code_challenge_method=S256&response_mode=query&state=556fcefb-2a0c-46d7-a50f-ccb1b6e84bac]]></con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1ad74da4-00c8-49ad-a962-6cbbdae08127" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="27d5881d-f6b6-4fd2-b89b-9898cde2c318" name="check for 'x-frame-options'"><con:configuration><scriptText>assert messageExchange.responseHeaders["X-Frame-Options"] != null</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Username" id="5ad66c9b-f400-4e42-9f07-088991fb0d53"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-provideEmailAddress" id="8823e1d2-5fa2-41db-bb5b-3cdc8d8df9e7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="71049774-abb4-455a-a78a-93f8b9736e24" name="provider-provideEmailAddress" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users email address to be send to the login-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#host_fake_server}/login</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae795b15-6bbb-4dfb-ad1e-af6d33edfdd0" name="statue=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>email</con:name><con:value>${#Project#email}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>aa9e40ec-1246-45d9-bb2e-46b87b1e586a</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>login</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Password" id="9d370ea2-86bd-4fa2-97a5-141d20e32533"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-providePassword" id="c73cc0b0-f17c-4c97-905e-53fa10d0daa6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="e05f9780-7ac5-41be-a84b-fb2425d8b4cd" name="provider-providePassword" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users password to be send to the authenticate-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/authenticate</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="26cf303b-1eb4-484c-a132-9ef38be17d3e" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#Project#password}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>aa9e40ec-1246-45d9-bb2e-46b87b1e586a</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>authenticate</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Grant" id="8f23597a-c60f-4aaa-a820-413922184645"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-providePassword</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-grantAccess</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-grantAccess" id="a60dcc65-8fa3-415d-b2ac-e5807b894d3a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="1c1997d7-7a13-416c-a6cd-fdc2b294865c" name="provider-grantAccess" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Providing
  the users grant to be send to the consent-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/consent</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="5ab02bdb-ebc1-40a6-a242-e361e7a4e0f5" name="status=200"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>action</con:name><con:value>grant</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>aa9e40ec-1246-45d9-bb2e-46b87b1e586a</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-extractLocation" id="8d675803-784a-411a-bb0e-f01a6c434e44"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
  def location =
  testRunner.testCase.testSteps["provider-grantAccess"].testRequest.response.responseHeaders["Location"][0]
  def code = location =~ /code=([^&amp;]+)/;
  if (!code) {
  throw new RuntimeException("No code returned!");
  }
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-exchangeCodeForToken", "Endpoint", location)</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-exchangeCodeForToken" id="308637a6-8dbc-4ed7-b80c-27a9f5029257"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="loginbuddy-exchangeCodeForToken" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Forward the 'state' and 'code' to loginbuddy. Loginbuddy then calls the providers token-endpoint. It then issues its own 'code'</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/callback?state=556fcefb-2a0c-46d7-a50f-ccb1b6e84bac&amp;code=4a4d79a7-fec7-43f3-872e-9ef09910fcca</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ccd972c0-afaf-4ae9-bd0d-69669a6fdf10" name="find: code and state"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("code"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="soapui-extractLocation" id="623aa330-9620-4496-a268-58cf72aa6a80"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
def location = testRunner.testCase.testSteps["loginbuddy-exchangeCodeForToken"].testRequest.response.responseHeaders["Location"][0]
def code = location =~ /code=([^&amp;]+)/;
if (!code) {
  throw new RuntimeException("No code returned!");
}
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("soapui-exchangeCodeForUserDetails", "code", code.group(1))</script></con:config></con:testStep><con:testStep type="httprequest" name="soapui-exchangeCodeForUserDetails" id="35b1bdfb-b6f1-42e9-8dd8-1a7f4302e3da"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-exchangeCodeForUserDetails" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>The client uses its 'code' to retrieve the user details</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5792ce08-31e5-4122-84df-b5f4e4f2ffcf" name="content-type: application/jwt"><con:configuration><scriptText>// Find the 'Location' header of the response
assert messageExchange.responseHeaders["Content-Type"] != null

def contentType = messageExchange.responseHeaders["Content-Type"][0]

// Check if all expected parameters are included in the redirect_uri
assert(contentType.startsWith("application/jwt"));</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" id="407de5fd-edcf-4efa-8ded-1e4c8341284d" name="Contains '.': must be JWT"><con:configuration><token>.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>e90ca932-2a58-4d82-8afe-a2442578ee72</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="soapui-codeNotTwice" id="68174760-a309-4078-9ba3-5a612d72b637"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-codeNotTwice" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Verify that the 'code' can only be used once (here: success case)</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="77a924a6-237e-491a-810e-09d8f0b6e7f6" name="contains: expired"><con:configuration><token>expired</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>0dd0b004-fbb6-4587-857e-822b3255b78a</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="discovery" id="422f65be-abb3-42de-995d-57c9b9648ff8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="discovery" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Get the openid configuration, extract userinfo and jwks</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_discovery}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="a64f8cd6-403e-401f-9993-cf1e17932700" name="CompleteFlow-Confidential-Client"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="65a77f87-487e-461d-9b1e-6a3fbe30f04c" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Success" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="httprequest" name="client-loginbuddy-requestProviderList" id="1d261909-39e5-4baf-bc2a-ad9564c9c8d8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="client-loginbuddy-requestProviderList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client  calls loginbuddy to retrieve list of providers. This checks for the existence of the 'fake'   provider for testing purposes. also checks if tokens were obfuscated</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b8a7410e-0f24-46b2-813c-29db38945720" name="contains=&lt;html>"><con:configuration><token>&lt;html></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id_confidential}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid email profile</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>obfuscate_token</con:name><con:value>true</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="loginbuddy-getDetails" id="5a2018f4-c897-49f1-b431-b044de92963b"><con:description>Extract the 'state' parameter and get the 'action' which is the next location</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>form_action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/@action</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>loginbuddy-nextLocation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>session</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>loginbuddy-selectFakeProvider</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="loginbuddy-nextLocation" id="6623cc26-ac8e-4d89-b59d-8a30c9d606c9"><con:description>Setting a variable to be used later as URL path</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>action</con:name><con:value>initialize</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-selectFakeProvider" id="df73feb0-bf0e-4c16-bc62-a97865a14f25"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7a95031b-819e-4780-9c96-2bcc99423138" name="loginbuddy-selectFakeProvider" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Choosing
  the provider. Expects a
  redirect to the login page of the selected
  provider. Checks for required
  parameters</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}/${#action}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3fd40551-e7ad-47cb-bb2d-f52c37bf1dc5" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8de45dc6-e7be-41d5-9d28-9ad09f0509cb" name="find 'Location' header and required parameters"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("client_id"));
    assert(location.contains("response_type=code"));
    assert(location.contains("scope=openid%20profile%20email"));
    assert(location.contains("nonce"));
    assert(location.contains("redirect_uri"));
    assert(location.contains("code_challenge"));
    assert(location.contains("code_challenge_method=S256"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>provider</con:name><con:value>${#Project#provider_test}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>b04ac4b1-f3a3-415c-9198-fe616219834a</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-setProviderEndpoint" id="79c6bd45-90d7-49c3-b15a-7923e4b1573a"><con:description>Set the endpoint for the next test step</con:description><con:settings/><con:config><script>//Find the 'Location' header of the response
  def location =
  testRunner.testCase.testSteps["loginbuddy-selectFakeProvider"].testRequest.response.responseHeaders["Location"][0]

  // Write the 'location' into the 'endpoint' of the testStep 'callProvider'
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-provider-callFakeProvider",
  "Endpoint", location.toString())</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-provider-callFakeProvider" id="5d943678-429d-4a17-8e9b-0f1d119f72c0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="be121e2d-1636-4a5d-ba1b-44ef31a40190" name="loginbuddy-provider-callFakeProvider" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Calls the providers authorization endpoint and receives a login page</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint><![CDATA[https://demoserver.loginbuddy.net/authorize?client_id=loginbuddy_demoId&response_type=code&scope=openid%20profile%20email&nonce=3210c1cc-bfe7-4a47-b6b9-682dd26ad680&redirect_uri=https%3A%2F%2Flocal.loginbuddy.net%2Fcallback&code_challenge=gErnfW2rPAJANWkU-q8R3BRLpRlFOCfl8zSnOXDmCNc&code_challenge_method=S256&response_mode=query&state=b04ac4b1-f3a3-415c-9198-fe616219834a]]></con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1ad74da4-00c8-49ad-a962-6cbbdae08127" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="27d5881d-f6b6-4fd2-b89b-9898cde2c318" name="check for 'x-frame-options'"><con:configuration><scriptText>assert messageExchange.responseHeaders["X-Frame-Options"] != null</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Username" id="281e5e99-4d02-4df4-a565-521f3686ed33"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-provideEmailAddress" id="4f4053d3-dc23-4f19-9c8e-1455e5bfa3d4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="71049774-abb4-455a-a78a-93f8b9736e24" name="provider-provideEmailAddress" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users email address to be send to the login-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#host_fake_server}/login</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae795b15-6bbb-4dfb-ad1e-af6d33edfdd0" name="statue=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>email</con:name><con:value>${#Project#email}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>352abc16-3921-4904-9ee7-aed130bcbbed</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>login</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Password" id="49487573-250c-4fa6-8d61-b57af7e7f7c9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-providePassword" id="dc755bbe-fe2e-49f8-b7e1-932c47d0ce19"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="e05f9780-7ac5-41be-a84b-fb2425d8b4cd" name="provider-providePassword" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users password to be send to the authenticate-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/authenticate</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="26cf303b-1eb4-484c-a132-9ef38be17d3e" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#Project#password}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>352abc16-3921-4904-9ee7-aed130bcbbed</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>authenticate</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Grant" id="804ef7c1-1dd6-4994-ae83-980950607d9c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-providePassword</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-grantAccess</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-grantAccess" id="b71ab8db-be75-4506-9f5f-a1646df41cc4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="1c1997d7-7a13-416c-a6cd-fdc2b294865c" name="provider-grantAccess" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Providing
  the users grant to be send to the consent-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/consent</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="5ab02bdb-ebc1-40a6-a242-e361e7a4e0f5" name="status=200"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>action</con:name><con:value>grant</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>352abc16-3921-4904-9ee7-aed130bcbbed</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-extractLocation" id="2c90c353-ce91-440f-a5cf-f7be829b01bb"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
  def location =
  testRunner.testCase.testSteps["provider-grantAccess"].testRequest.response.responseHeaders["Location"][0]
  def code = location =~ /code=([^&amp;]+)/;
  if (!code) {
  throw new RuntimeException("No code returned!");
  }
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-exchangeCodeForToken", "Endpoint", location)</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-exchangeCodeForToken" id="54e1c1be-72df-46c7-a079-0c65c32a7354"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="loginbuddy-exchangeCodeForToken" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Forward the 'state' and 'code' to loginbuddy. Loginbuddy then calls the providers token-endpoint. It then issues its own 'code'</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/callback?state=b04ac4b1-f3a3-415c-9198-fe616219834a&amp;code=6acd58cd-822e-4f44-8705-41c7e6f72b17</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ccd972c0-afaf-4ae9-bd0d-69669a6fdf10" name="find: code and state"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("code"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="soapui-extractLocation" id="7c39ccb4-4f6a-4bf1-b6ba-043b20283528"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
def location = testRunner.testCase.testSteps["loginbuddy-exchangeCodeForToken"].testRequest.response.responseHeaders["Location"][0]
def code = location =~ /code=([^&amp;]+)/;
if (!code) {
  throw new RuntimeException("No code returned!");
}
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("soapui-exchangeCodeForUserDetails", "code", code.group(1))</script></con:config></con:testStep><con:testStep type="httprequest" name="soapui-exchangeCodeForUserDetails" id="a0118016-d10b-4384-9eca-f4437b693438"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-exchangeCodeForUserDetails" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>The client uses its 'code' to retrieve the user details</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1f9d9b0a-8d68-44d5-a9a3-45cf0e2686ca" name="sub in id_token == email"><con:configuration><path>$.details_provider.id_token_payload.sub</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cf484791-1674-4252-90bc-0e9918dc57ce" name="sub in userinfo == email"><con:configuration><path>$.details_provider.userinfo.sub</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bc24874a-9d0e-4fea-87fc-6755b7bdc8a2" name="sub in normalized == email"><con:configuration><path>$.details_normalized.sub</path><content>${#Project#email}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="86917269-710f-42d6-8082-6e3b2c613346" name="Script Assertion"><con:configuration/></con:assertion><con:assertion type="JsonPath RegEx Match" id="f2505e7b-43cc-4157-9b79-3f5ce40ef998" name="access_token=8 characters (obfuscated)"><con:configuration><path>access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>.{8}</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="f2505e7b-43cc-4157-9b79-3f5ce40ef998" name="refresh_token=8 characters (obfuscated)"><con:configuration><path>refresh_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>.{8}</regEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="a1dd0e41-722d-4686-b040-b22bb7abb33d" name="not contain on_behalf_of"><con:configuration><token>on_behalf_of</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>de7648fc-9375-4891-af38-08c2aab43537</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id_confidential}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>${#Project#client_secret_confidential}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="soapui-codeNotTwice" id="d821817c-5d63-49f3-ade0-6c6a49b9aa25"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-codeNotTwice" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Verify that the 'code' can only be used once (here: success case)</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="77a924a6-237e-491a-810e-09d8f0b6e7f6" name="contains: expired"><con:configuration><token>expired</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>0dd0b004-fbb6-4587-857e-822b3255b78a</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="71c80431-15cb-401e-8f8e-496fdc13b372" name="SelfissuedMe"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="719cb084-30a5-4825-85a2-81715706cceb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="provider-selfissued" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="authorize-selfissued" id="17a1d30e-13cb-4bc2-bc87-c42492c7c6bb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="authorize-selfissued" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client
  calls lbginbuddy to retrieve list of providers. This checks for the existence of the 'fake'
  provider for testing purposes.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>provider</con:name><con:value>self-issued</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid email profile</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Extract Location" id="8513c20d-9b2a-4387-9a11-4c4bdc4912eb"><con:settings/><con:config><script>//Find the 'Location' header of the response
def location = testRunner.testCase.testSteps["authorize-selfissued"].testRequest.response.responseHeaders["Location"][0]

// Write the 'location' into the 'endpoint' of the testStep 'test-step-target'
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("initialize-selfissued", "Endpoint", location.toString())

// Extract session
def sessionId = location.split("session=")[1]
assert sessionId != null
groovyUtils.setPropertyValue("Properties", "sessionId", sessionId)</script></con:config></con:testStep><con:testStep type="httprequest" name="initialize-selfissued" id="56e46be8-9514-4bee-858a-4d64caa210db"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6cdb03a8-d741-4015-9cd8-84e6e40d1dc9" name="initialize-selfissued" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/initialize?session=e49a6272-82c8-4630-8b01-5b69c9ae853f</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0050bfda-7439-4eef-be48-79c764e7b000" name="status: 302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Extract Location - scheme = openid" id="58cd1b0b-a5fe-481c-9849-1fbd61eee84a"><con:settings/><con:config><script>//Find the 'Location' header of the response
def location = testRunner.testCase.testSteps["initialize-selfissued"].testRequest.response.responseHeaders["Location"][0]
assert location.startsWith('openid://');

// Extract redirect_uri
def redirectUri = location.split("redirect_uri=")[1]
redirectUri = redirectUri.split("&amp;")[0]
assert redirectUri != null

// Extract nonce
def nonce = location.split("nonce=")[1]
nonce = nonce.split("&amp;")[0]

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("Properties", "redirectUri", new URLDecoder().decode(redirectUri))
groovyUtils.setPropertyValue("Get JWT for test", "nonce", new URLDecoder().decode(nonce))</script></con:config></con:testStep><con:testStep type="httprequest" name="Get JWT for test" id="f8f9e387-51cb-4ba1-a746-3723ba00ba2b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a42c8684-e3fb-480d-848f-2cc38bde343a" name="Get JWT for test" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Simulates an id_token issued by self-issued provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#helper_host}${#Project#helper_path_jwt}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>issuer</con:name><con:value>https://self-issued.me</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>audience</con:name><con:value>${#Project#helper_redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>subject</con:name><con:value>arandomvalue</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>nonce</con:name><con:value>2d00b3ea-ad17-4774-ad0f-b8a5ee546300</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="GetHelperData" id="797af334-a27e-4892-987b-0f687a8a1ade"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>idtoken</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get JWT for test</con:sourceStep><con:sourcePath>jwt</con:sourcePath><con:targetType>idtoken</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="e7fb8cbc-9ac6-4c40-a727-a2671872fed6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sessionId</con:name><con:value>e49a6272-82c8-4630-8b01-5b69c9ae853f</con:value></con:property><con:property><con:name>redirectUri</con:name><con:value>https://local.loginbuddy.net/callback</con:value></con:property><con:property><con:name>idtoken</con:name><con:value>eyJraWQiOiI4ZTI2ZjJmNi1mYjkyLTRkOGYtODQwMy1lODIyMmVjMDhlNDMiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL3NlbGYtaXNzdWVkLm1lIiwic3ViIjoiYXJhbmRvbXZhbHVlIiwiYXVkIjoiaHR0cHM6Ly9sb2NhbC5sb2dpbmJ1ZGR5Lm5ldC9jYWxsYmFjayIsImV4cCI6MTY2NzE4MjAyOSwiaWF0IjoxNjY3MTgxOTY5LCJqdGkiOiJjQnBHOVc4Ym54eFpkUHJvS01SZnFnIiwibmJmIjoxNjY3MTgxODQ5LCJub25jZSI6IjJkMDBiM2VhLWFkMTctNDc3NC1hZDBmLWI4YTVlZTU0NjMwMCIsInN1Yl9qd2siOnsia3R5IjoiUlNBIiwiZSI6IkFRQUIiLCJ1c2UiOiJzaWciLCJraWQiOiI4ZTI2ZjJmNi1mYjkyLTRkOGYtODQwMy1lODIyMmVjMDhlNDMiLCJuIjoid3EwWVNyRE9LUE9CeXRfa0tmb1pnd1ZCdlZTUUluSXFobmhCb2w2N2tZR1hteFJnR3kzTl9jd3pkbl8zb2RYUEZWYUlGY1Z2WDhud3o0UUJ3U3hGVnEwODRnMDlTU0NOV2otVnA5WTd4WmtXZHJEYVd5TDdfLVUtTndTYU4yTzhEOVE1T0tlMmY4UndXc284WDhvTnVtd19FVGYwVEZrY25fZkhwb2RTc0hVT2tDLXdqS2xoakVYR01lam4wOVY0UzU1eGgxek5FVkhSLWN4b09UbHV5LW1SUTlVRnN1R2dmX0hsc3N1OUNPY0Z3eFZ3WHltb1Vkc2JveGx6ZVZIT2ROcXp4dnI2UXR0bzRMQlZCTDRfcWlPRGQ2bnU5RnQzbl9uU050YjdjNVFUdnZBc2IzbllOOXNxM2o4X2tpNkxFOThvcm1RYVJ0VF82c1lHZFFUd0tRIn19.U8tStMplkW1qZ2sW-gMTIisSVUPR7ihc3Acjaww7i8fHZtslfsx_Gd9dhoNVSK3O2IFvb-wNzRxVSY8Vo_RavukAVh3-rJbyi8kJdtmTRA5gYCqQnjqmCS6vYN6YgIbMTXv_lt_RfSHDlR-ATFmIREeqzwGYY7Bzm3TGcwtPjM4uNLPeHZzjhS24yxgxEhQq03mBlw9mdoajq6-yeEOVYIJKte8F861pCiXrfG3O-h7Lh9vRiBNZvscDoAFgHExBtZDqGJMx2jj5a2suUdrHNHFgWKBJ3FT_C6rPOFLlizhpvhD8dY3-9CDw3TALeTwssUMFEgWmynlxPpkOm93whA</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="send-selfissued-response" id="17a993ef-da3d-4571-b1b1-182deda9abb1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="654b3799-a13e-4701-b200-4b2db07c7d38" name="send-selfissued-response" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${redirectUri}?state=${sessionId}&amp;id_token=${idtoken}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="2935e32e-f3b0-4c00-8b15-163d4d6a224a" name="status: 302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="soapui-extractLocation" id="9fc8e5f7-e72d-4358-95e1-39e0d1c94452"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
def location = testRunner.testCase.testSteps["send-selfissued-response"].testRequest.response.responseHeaders["Location"][0]
def code = location =~ /code=([^&amp;]+)/;
if (!code) {
  throw new RuntimeException("No code returned!");
}
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("soapui-exchangeCodeForUserDetails", "code", code.group(1))</script></con:config></con:testStep><con:testStep type="httprequest" name="soapui-exchangeCodeForUserDetails" id="c53dd9eb-2d0e-4ab4-95fb-9ea9bf008f1f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-exchangeCodeForUserDetails" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>The client uses its 'code' to retrieve the user details</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="77c12905-99eb-4c1a-a77b-3e091bc8bf9e" name="contains: id_token"><con:configuration><path>id_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7b860728-8aec-4276-beb1-3c5bafedbf79" name="sub: arandomvalue"><con:configuration><path>$.details_provider.id_token_payload.sub</path><content>arandomvalue</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>5e149b91-e4dc-4dd8-befc-3ff08b7e0174</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5436320c-e916-46e5-b60d-fd4319c5c461" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="provider-selfissued-dynamic-registration" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="register" id="6e294301-704e-4057-be13-f7bc5a2c3a6e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="register" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client
  calls lbginbuddy to retrieve list of providers. This checks for the existence of the 'fake'
  provider for testing purposes.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host_oidcdr}${#Project#path_oidcdr_register}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="status: 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="24f4a9b6-8f8d-4d0b-86e9-9455be9c389d" name="check: client_id matches redirect_uri"><con:configuration><path>client_id</path><content>${#Project#redirect_uri}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="65f80596-5da4-4c6b-aec6-b6b34f0b7025" name="check: authorizaiton_endpoint = openid://"><con:configuration><path>authorization_endpoint</path><content>openid://</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>issuer</con:name><con:value>${#Project#issuer_selfissued}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="RegistrationDetails" id="2fe073c7-bf0d-41c4-93f7-9b3899070101" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>provider</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>register</con:sourceStep><con:sourcePath>provider</con:sourcePath><con:targetType>provider</con:targetType><con:targetStep>authorize-selfissued</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>client_id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>register</con:sourceStep><con:sourcePath>client_id</con:sourcePath><con:targetType>client_id</con:targetType><con:targetStep>authorize-selfissued</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>response_type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>register</con:sourceStep><con:sourcePath>response_type</con:sourcePath><con:targetType>response_type</con:targetType><con:targetStep>authorize-selfissued</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scope</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>register</con:sourceStep><con:sourcePath>scope</con:sourcePath><con:targetType>scope</con:targetType><con:targetStep>authorize-selfissued</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>redirect_uri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>register</con:sourceStep><con:sourcePath>redirect_uri</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>authorize-selfissued</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="authorize-selfissued" id="b556b418-d69b-430a-be56-5e7808fdcd0c" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="authorize-selfissued" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client
  calls lbginbuddy to retrieve list of providers. This checks for the existence of the 'fake'
  provider for testing purposes.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>https://local.soapui.com/redirect</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>https://local.soapui.com/redirect</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>provider</con:name><con:value>https://self-issued.me</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid profile email address phone</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Extract Location" id="ae418943-fffa-47fb-b442-b5d12af2a786" disabled="true"><con:settings/><con:config><script>//Find the 'Location' header of the response
def location = testRunner.testCase.testSteps["authorize-selfissued"].testRequest.response.responseHeaders["Location"][0]

// Write the 'location' into the 'endpoint' of the testStep 'test-step-target'
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("initialize-selfissued", "Endpoint", location.toString())

// Extract session
def sessionId = location.split("session=")[1]
assert sessionId != null
groovyUtils.setPropertyValue("Properties", "sessionId", sessionId)</script></con:config></con:testStep><con:testStep type="httprequest" name="initialize-selfissued" id="06a2730c-40e0-4a4d-8d38-03bb6878fa53" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6cdb03a8-d741-4015-9cd8-84e6e40d1dc9" name="initialize-selfissued" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/initialize?session=e6153f6b-c7b9-4637-9e72-ad861ae6c2c8</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0050bfda-7439-4eef-be48-79c764e7b000" name="status: 302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Extract Location - scheme = openid" id="cd457156-a5c6-4fff-87d6-3e0ea2d904ef" disabled="true"><con:settings/><con:config><script>//Find the 'Location' header of the response
def location = testRunner.testCase.testSteps["initialize-selfissued"].testRequest.response.responseHeaders["Location"][0]
assert location.startsWith('openid://');

// Extract redirect_uri
def redirectUri = location.split("redirect_uri=")[1]
redirectUri = redirectUri.split("&amp;")[0]
assert redirectUri != null

// Extract nonce
def nonce = location.split("nonce=")[1]
nonce = nonce.split("&amp;")[0]

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("Properties", "redirectUri", new URLDecoder().decode(redirectUri))
groovyUtils.setPropertyValue("Get JWT for test", "nonce", new URLDecoder().decode(nonce))</script></con:config></con:testStep><con:testStep type="httprequest" name="Get JWT for test" id="b265ee7f-956f-4c75-bd10-c466af456edd" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a42c8684-e3fb-480d-848f-2cc38bde343a" name="Get JWT for test" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Simulates an id_token issued by self-issued provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#helper_host}${#Project#helper_path_jwt}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>issuer</con:name><con:value>https://self-issued.me</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>audience</con:name><con:value>${#Project#helper_redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>subject</con:name><con:value>arandomvalue</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>nonce</con:name><con:value>42b8c0f4-60d5-4321-8ad7-f91414b9d98d</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="GetHelperData" id="7bee8909-b44c-44cb-bc2b-56ba000edd04" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>idtoken</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Get JWT for test</con:sourceStep><con:sourcePath>jwt</con:sourcePath><con:targetType>idtoken</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="33cd3847-0bd9-4432-92bd-16714c0e996b" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sessionId</con:name><con:value>e6153f6b-c7b9-4637-9e72-ad861ae6c2c8</con:value></con:property><con:property><con:name>redirectUri</con:name><con:value>https://local.loginbuddy.net/callback/selfissued</con:value></con:property><con:property><con:name>idtoken</con:name><con:value>eyJraWQiOiJkYmUzNWExYS1lYTM5LTQzMDktYjQ5Mi1iMTg1MThkODBmYWIiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL3NlbGYtaXNzdWVkLm1lIiwic3ViIjoiYXJhbmRvbXZhbHVlIiwiYXVkIjoiaHR0cHM6Ly9sb2NhbC5sb2dpbmJ1ZGR5Lm5ldC9jYWxsYmFjay9zZWxmaXNzdWVkIiwibm9uY2UiOiI0MmI4YzBmNC02MGQ1LTQzMjEtOGFkNy1mOTE0MTRiOWQ5OGQiLCJleHAiOjE1NzM2MjM1MTgsImlhdCI6MTU3MzYyMzQ1OCwianRpIjoiNzFLYkExWE9zZG45NjJNU09nLTdFQSIsIm5iZiI6MTU3MzYyMzMzOCwic3ViX2p3ayI6eyJrdHkiOiJSU0EiLCJlIjoiQVFBQiIsImtpZCI6ImRiZTM1YTFhLWVhMzktNDMwOS1iNDkyLWIxODUxOGQ4MGZhYiIsIm4iOiJvUGxSc0NnRWMtMTcwYWpzaWt2U2hlR1pQOC1Qd0FJZlFRMy1RRGYxQm1WdkU4RlV4amhvckx0M3FPTi16ZC1YemVocUx2VzVlVS1Hb0NOSlhKU1hOY01BZEdHUUVfWW1HVHI2WDdwTG5tX3k5TVJydGJXd2RVUmN2WDNJWlJuR0cwek4zUnJ1RXdobzF6TDlxRXpCeG9YeGE2R3MxNHNqVkpOUnZsXzlrdkw3QmZ0YjZzcGdRanREMUhTbG9rS00wNnFUdzZaQ3YtN3oxUXVGTllPM0RJVVBqRWc0Uk1LM1FRWk42TTRxc2h6X3Z6Q0FTczk2MXFWSmdGSFVFNHB6S0owYWxlc0I5bWVLVlZKOUpja0Q5ZDZrMEVxbWJ3MExlM192c3M1Zm9ZeUI0RFNQaVhudTlFWEFDS2NvenA1c3ViQ090NFVNMVhPSVV4VVpESWdYOVEifX0.NrYoRBsBnj5EJC6G51i15sJ9IegvLaMPkzrD41aJZjDXqIfEWVr-AwkeJddGQKRVPdr7yFYdV5zh6kpUh_au85dO-W0Fhg6RtBh_FtUYuzX62D1uo9BaKs9GdGbCn7kz8ZFJYltz6JUUZj6jrY6LYdRXrQI4Jq6AU6OjDeXoptWYWQVoZMt7rxuBXKmRm5T9zXxOgzVNjhYsn62bluyU3kDmoSO0tETvdRX8B6RtS4rbvtlkCSx697OvvdsPzkYySf-UVdWIuEWZmsugFQiedctbfKMvveUTg8sYe51xYgPcdyLujth5pEO7Q7HNblMYZ49Lu_6LJ3vB6ZsdT_Vosw</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="send-selfissued-response" id="3723c1bd-6561-4d75-a219-e2d4fdf38d4c" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="654b3799-a13e-4701-b200-4b2db07c7d38" name="send-selfissued-response" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${redirectUri}?state=${sessionId}&amp;id_token=${idtoken}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="2935e32e-f3b0-4c00-8b15-163d4d6a224a" name="status: 302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="soapui-extractLocation" id="0ec59084-4da5-456f-bd29-fee8775a0540" disabled="true"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
def location = testRunner.testCase.testSteps["send-selfissued-response"].testRequest.response.responseHeaders["Location"][0]
def code = location =~ /code=([^&amp;]+)/;
if (!code) {
  throw new RuntimeException("No code returned!");
}
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("soapui-exchangeCodeForUserDetails", "code", code.group(1))</script></con:config></con:testStep><con:testStep type="httprequest" name="soapui-exchangeCodeForUserDetails" id="64bbe017-2919-4b74-926c-f637fb398cbd" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-exchangeCodeForUserDetails" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>The client uses its 'code' to retrieve the user details</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="77c12905-99eb-4c1a-a77b-3e091bc8bf9e" name="contains: id_token"><con:configuration><path>id_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7b860728-8aec-4276-beb1-3c5bafedbf79" name="sub: arandomvalue"><con:configuration><path>$.details_provider.id_token_payload.sub</path><content>arandomvalue</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>32f70081-2714-453d-b692-dea3852eba8b</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>host</con:name><con:value>https://local.loginbuddy.net</con:value></con:property><con:property><con:name>host_http</con:name><con:value>http://local.loginbuddy.net</con:value></con:property><con:property><con:name>redirect_uri</con:name><con:value>https://local.soapui.com/redirect</con:value></con:property><con:property><con:name>client_id</con:name><con:value>clientIdForTestingPurposes</con:value></con:property><con:property><con:name>client_secret</con:name><con:value>d5453153-e096-4672-bcb5-313d9847c8de</con:value></con:property><con:property><con:name>provider_test</con:name><con:value>server_loginbuddy</con:value></con:property><con:property><con:name>host_fake_Server</con:name><con:value>https://demoserver.loginbuddy.net</con:value></con:property><con:property><con:name>email</con:name><con:value>fake@emailaddress.com</con:value></con:property><con:property><con:name>password</con:name><con:value>fakePAssword</con:value></con:property><con:property><con:name>state</con:name><con:value>soapuiFakeState</con:value></con:property><con:property><con:name>path_initialize</con:name><con:value>/initialize</con:value></con:property><con:property><con:name>path_callback</con:name><con:value>/callback</con:value></con:property><con:property><con:name>path_providers_jsp</con:name><con:value>/iapis/providers.jsp</con:value></con:property><con:property><con:name>path_error_jsp</con:name><con:value>/iapis/error.jsp</con:value></con:property><con:property><con:name>path_authorize</con:name><con:value>/authorize</con:value></con:property><con:property><con:name>path_token</con:name><con:value>/token</con:value></con:property><con:property><con:name>path_discovery</con:name><con:value>/.well-known/openid-configuration</con:value></con:property><con:property><con:name>helper_path_jwt</con:name><con:value>/test/generate/jwt</con:value></con:property><con:property><con:name>helper_host</con:name><con:value>http://local.loginbuddy.net:8999</con:value></con:property><con:property><con:name>helper_redirect_uri</con:name><con:value>https://local.loginbuddy.net/callback</con:value></con:property><con:property><con:name>host_oidcdr</con:name><con:value>https://loginbuddy-oidcdr:445</con:value></con:property><con:property><con:name>path_oidcdr_register</con:name><con:value>/oidcdr/register</con:value></con:property><con:property><con:name>issuer_selfissued</con:name><con:value>https://self-issued.me</con:value></con:property><con:property><con:name>host_sidecar</con:name><con:value>https://loginbuddy-sidecar</con:value></con:property><con:property><con:name>port_sidecar</con:name><con:value>444</con:value></con:property><con:property><con:name>path_sidecar_initialize</con:name><con:value>/sidecar/initialize</con:value></con:property><con:property><con:name>client_id_confidential</con:name><con:value>clientIdForTestingPurposesConfidential</con:value></con:property><con:property><con:name>client_secret_confidential</con:name><con:value>myFancyAndSecureClientSecret</con:value></con:property><con:property><con:name>client_id_jwt</con:name><con:value>clientIdForTestingPurposesJwt</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>